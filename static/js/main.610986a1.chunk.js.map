{"version":3,"sources":["components/layout/Header.js","components/layout/Sidebar.js","components/layout/Footer.js","components/layout/MainLayout.js","contexts/LLMContext.js","hooks/useLLM.js","contexts/GameContext.js","hooks/useGameState.js","hooks/useMemory.js","components/gameMaster/ResponseControls.js","components/gameMaster/NarrativeDisplay.js","components/common/DiceRoller.js","components/common/Loading.js","components/gameMaster/GameMasterPanel.js","contexts/CharacterContext.js","hooks/useCharacter.js","components/character/CharacterSheet.js","components/memory/MemoryPanel.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","_ref","onMenuToggle","React","createElement","className","onClick","aria-label","xmlns","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","cx","cy","r","d","Sidebar","isOpen","activeTab","onTabChange","navItems","id","label","icon","points","map","item","key","title","Footer","Date","getFullYear","href","MainLayout","children","isSidebarOpen","setIsSidebarOpen","useState","toggleSidebar","LLMContext","createContext","mockResponses","LLMContextProvider","isConnected","setIsConnected","responseIndex","setResponseIndex","contextValue","generateResponse","async","userInput","context","Promise","resolve","setTimeout","response","text","length","gameStateChanges","prev","toggleConnection","Provider","value","useLLM","useContext","Error","GameContext","initialGameState","location","name","description","npcs","disposition","quests","status","objectives","completed","inventory","combatActive","combatants","GameContextProvider","gameState","setGameState","updateGameState","updates","prevState","resetGameState","completeObjective","questId","objectiveId","updatedQuests","quest","updatedObjectives","obj","addToInventory","useGameState","useMemory","memories","setMemories","type","content","timestamp","now","toISOString","importance","addToMemory","useCallback","memoryData","userMessage","gmResponse","slice","newMemory","details","prevMemories","retrieveRelevantMemories","query","queryLower","toLowerCase","relevantMemories","filter","memory","includes","sort","a","b","importanceRank","high","medium","low","importanceDiff","deleteMemory","memoryId","updateMemory","ResponseControls","onRetry","onEdit","isGenerating","disabled","renderer","marked","Renderer","setOptions","gfm","breaks","sanitize","smartLists","smartypants","xhtml","NarrativeDisplay","processedContent","codeBlocks","codeBlockCounter","replace","match","placeholder","processGameTerms","Object","keys","forEach","htmlContent","dangerouslySetInnerHTML","__html","DICE_TYPES","DiceRoller","setIsOpen","rolls","setRolls","customDice","setCustomDice","customQuantity","setCustomQuantity","toggleDiceRoller","role","sides","quantity","arguments","undefined","newRolls","total","i","Math","floor","random","push","dice","values","rollDie","htmlFor","min","max","onChange","e","parseInt","target","onSubmit","preventDefault","modifier","roll","join","Loading","GameMasterPanel","setUserInput","conversation","setConversation","setIsGenerating","isEditingResponse","setIsEditingResponse","editedResponse","setEditedResponse","conversationEndRef","useRef","inputRef","useEffect","current","scrollIntoView","behavior","focus","handleSendMessage","trim","error","console","isError","message","index","isEdited","ref","rows","handleCancelEdit","handleSaveEdit","newConversation","lastGMResponseIndex","m","lastIndexOf","Fragment","lastUserMessageIndex","lastUserMessage","handleEdit","lastGMResponse","reverse","find","onKeyDown","shiftKey","CharacterContext","sampleCharacter","race","class","level","alignment","background","abilityScores","strength","dexterity","constitution","intelligence","wisdom","charisma","combatStats","hitPoints","temporary","armorClass","initiative","speed","hitDice","used","skills","acrobatics","proficient","expertise","animalHandling","arcana","athletics","deception","history","insight","intimidation","investigation","medicine","nature","perception","performance","persuasion","religion","sleightOfHand","stealth","survival","weight","spells","features","proficiencies","languages","weapons","armor","tools","CharacterContextProvider","character","setCharacter","updateCharacter","prevCharacter","updateAbilityScore","ability","updateHitPoints","addInventoryItem","existingItemIndex","findIndex","updatedInventory","removeInventoryItem","itemId","itemIndex","useCharacter","CharacterSheet","entries","score","charAt","toUpperCase","feature","MemoryPanel","searchTerm","setSearchTerm","setFilter","filteredMemories","matchesSearch","matchesFilter","getMemoryIcon","toLocaleString","newContent","prompt","window","confirm","App","setActiveTab","renderContent","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","createRoot","document","getElementById","render","StrictMode","HashRouter","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.610986a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = ({ onMenuToggle }) => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <div className=\"header-left\">\r\n        <button \r\n          className=\"menu-toggle\"\r\n          onClick={onMenuToggle}\r\n          aria-label=\"Toggle menu\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\r\n            <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\r\n            <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\r\n          </svg>\r\n        </button>\r\n        \r\n        <h1 className=\"app-title\">D&D LLM Game Master</h1>\r\n      </div>\r\n      \r\n      <div className=\"header-right\">\r\n        <div className=\"connection-status\">\r\n          <div className=\"status-indicator connected\"></div>\r\n          <span>Connected</span>\r\n        </div>\r\n        \r\n        <button className=\"settings-button\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n            <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\r\n          </svg>\r\n        </button>\r\n        \r\n        <button className=\"help-button\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path>\r\n            <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = ({ isOpen, activeTab, onTabChange }) => {\r\n  // Define the sidebar navigation items\r\n  const navItems = [\r\n    {\r\n      id: 'game-master',\r\n      label: 'Game Master',\r\n      icon: (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"></path>\r\n        </svg>\r\n      )\r\n    },\r\n    {\r\n      id: 'character',\r\n      label: 'Character',\r\n      icon: (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n          <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n        </svg>\r\n      )\r\n    },\r\n    {\r\n      id: 'memory',\r\n      label: 'Memory',\r\n      icon: (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n          <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n          <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n          <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n          <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n        </svg>\r\n      )\r\n    },\r\n    {\r\n      id: 'combat',\r\n      label: 'Combat',\r\n      icon: (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"></path>\r\n          <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n          <path d=\"M12 18v-6\"></path>\r\n          <path d=\"M8 18v-1\"></path>\r\n          <path d=\"M16 18v-3\"></path>\r\n        </svg>\r\n      )\r\n    },\r\n    {\r\n      id: 'world',\r\n      label: 'World',\r\n      icon: (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\r\n          <path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path>\r\n        </svg>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <aside className={`sidebar ${isOpen ? 'open' : 'closed'}`}>\r\n      <nav className=\"sidebar-nav\">\r\n        <ul>\r\n          {navItems.map(item => (\r\n            <li key={item.id}>\r\n              <button\r\n                className={`nav-item ${activeTab === item.id ? 'active' : ''}`}\r\n                onClick={() => onTabChange(item.id)}\r\n                aria-label={item.label}\r\n                title={item.label}\r\n              >\r\n                <span className=\"nav-icon\">{item.icon}</span>\r\n                <span className=\"nav-label\">{item.label}</span>\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n      \r\n      <div className=\"sidebar-footer\">\r\n        <button className=\"new-game-button\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\r\n            <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\r\n          </svg>\r\n          <span>New Game</span>\r\n        </button>\r\n        \r\n        <button className=\"save-game-button\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\r\n            <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\r\n            <polyline points=\"7 3 7 8 15 8\"></polyline>\r\n          </svg>\r\n          <span>Save Game</span>\r\n        </button>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"app-footer\">\r\n      <p className=\"footer-text\">\r\n        D&D LLM Game Master &copy; {new Date().getFullYear()}\r\n      </p>\r\n      <div className=\"footer-links\">\r\n        <a href=\"#\" className=\"footer-link\">Privacy</a>\r\n        <a href=\"#\" className=\"footer-link\">Terms</a>\r\n        <a href=\"#\" className=\"footer-link\">Help</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport './MainLayout.css';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport Footer from './Footer';\r\n\r\nconst MainLayout = ({ children, activeTab, onTabChange }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  \r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  };\r\n  \r\n  return (\r\n    <div className={`main-layout ${isSidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}>\r\n      <Header onMenuToggle={toggleSidebar} />\r\n      \r\n      <div className=\"main-content\">\r\n        <Sidebar \r\n          isOpen={isSidebarOpen} \r\n          activeTab={activeTab}\r\n          onTabChange={onTabChange}\r\n        />\r\n        \r\n        <div className=\"content-area\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;","import React, { createContext, useContext, useState } from 'react';\r\n\r\n// Create the context\r\nconst LLMContext = createContext();\r\n\r\n// Mock LLM service that returns predefined responses\r\nconst mockResponses = [\r\n  \"Welcome, adventurer! You find yourself at the entrance of a dark cave. What would you like to do?\",\r\n  \"As you step into the cave, the air grows cold. You see faint glimmers of light reflecting off what appears to be crystals embedded in the walls.\",\r\n  \"You hear a rustling sound from deeper within the cave. Something seems to be moving in the darkness ahead.\",\r\n  \"You discover an old wooden chest tucked away in a corner. It appears to be locked.\",\r\n  \"Rolling a perception check... You notice footprints in the dust. They seem to lead deeper into the cave.\"\r\n];\r\n\r\n// Provider component\r\nexport const LLMContextProvider = ({ children }) => {\r\n  const [isConnected, setIsConnected] = useState(true);\r\n  const [responseIndex, setResponseIndex] = useState(0);\r\n\r\n  // Mock function to generate responses\r\n  const generateResponse = async (userInput, context) => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n    \r\n    // Return a mock response and cycle through available responses\r\n    const response = {\r\n      text: mockResponses[responseIndex % mockResponses.length],\r\n      gameStateChanges: null\r\n    };\r\n    \r\n    setResponseIndex(prev => prev + 1);\r\n    \r\n    return response;\r\n  };\r\n\r\n  // Toggle connection status (for demo purposes)\r\n  const toggleConnection = () => {\r\n    setIsConnected(prev => !prev);\r\n  };\r\n\r\n  // Value to be provided by the context\r\n  const contextValue = {\r\n    isConnected,\r\n    generateResponse,\r\n    toggleConnection\r\n  };\r\n\r\n  return (\r\n    <LLMContext.Provider value={contextValue}>\r\n      {children}\r\n    </LLMContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using this context\r\nexport const useLLM = () => {\r\n  const context = useContext(LLMContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useLLM must be used within an LLMContextProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default LLMContext;","import { useContext } from 'react';\r\nimport LLMContext from '../contexts/LLMContext';\r\n\r\n// Custom hook for using the LLM context\r\nconst useLLM = () => {\r\n  const context = useContext(LLMContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useLLM must be used within an LLMContextProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default useLLM;","import React, { createContext, useContext, useState } from 'react';\r\n\r\n// Create the context\r\nconst GameContext = createContext();\r\n\r\n// Initial game state\r\nconst initialGameState = {\r\n  location: {\r\n    name: \"Cave Entrance\",\r\n    description: \"A dark cave mouth looms before you, a chill wind emanating from its depths.\"\r\n  },\r\n  npcs: [\r\n    {\r\n      id: \"npc-1\",\r\n      name: \"Old Hermit\",\r\n      description: \"A weathered old man with a long gray beard.\",\r\n      disposition: \"Friendly\",\r\n      location: \"Cave Entrance\"\r\n    }\r\n  ],\r\n  quests: [\r\n    {\r\n      id: \"quest-1\",\r\n      name: \"The Crystal Cavern\",\r\n      description: \"Explore the cave and discover its secrets.\",\r\n      status: \"Active\",\r\n      objectives: [\r\n        {\r\n          id: \"obj-1\",\r\n          description: \"Enter the cave\",\r\n          completed: false\r\n        },\r\n        {\r\n          id: \"obj-2\",\r\n          description: \"Find the source of the crystals\",\r\n          completed: false\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  inventory: [],\r\n  combatActive: false,\r\n  combatants: []\r\n};\r\n\r\n// Provider component\r\nexport const GameContextProvider = ({ children }) => {\r\n  const [gameState, setGameState] = useState(initialGameState);\r\n\r\n  // Update game state (can be partial updates)\r\n  const updateGameState = (updates) => {\r\n    setGameState(prevState => ({\r\n      ...prevState,\r\n      ...updates\r\n    }));\r\n  };\r\n\r\n  // Reset game state to initial values\r\n  const resetGameState = () => {\r\n    setGameState(initialGameState);\r\n  };\r\n\r\n  // Complete an objective in a quest\r\n  const completeObjective = (questId, objectiveId) => {\r\n    setGameState(prevState => {\r\n      const updatedQuests = prevState.quests.map(quest => {\r\n        if (quest.id === questId) {\r\n          const updatedObjectives = quest.objectives.map(obj => {\r\n            if (obj.id === objectiveId) {\r\n              return { ...obj, completed: true };\r\n            }\r\n            return obj;\r\n          });\r\n          \r\n          return { ...quest, objectives: updatedObjectives };\r\n        }\r\n        return quest;\r\n      });\r\n      \r\n      return { ...prevState, quests: updatedQuests };\r\n    });\r\n  };\r\n\r\n  // Add item to inventory\r\n  const addToInventory = (item) => {\r\n    setGameState(prevState => ({\r\n      ...prevState,\r\n      inventory: [...prevState.inventory, item]\r\n    }));\r\n  };\r\n\r\n  // Value to be provided by the context\r\n  const contextValue = {\r\n    gameState,\r\n    updateGameState,\r\n    resetGameState,\r\n    completeObjective,\r\n    addToInventory\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider value={contextValue}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using this context\r\nexport const useGameState = () => {\r\n  const context = useContext(GameContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useGameState must be used within a GameContextProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default GameContext;","import { useContext } from 'react';\r\nimport GameContext from '../contexts/GameContext';\r\n\r\n// Custom hook for using the game state context\r\nconst useGameState = () => {\r\n  const context = useContext(GameContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useGameState must be used within a GameContextProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default useGameState;","import { useState, useCallback } from 'react';\r\n\r\n// A simple hook for memory management in the game\r\nconst useMemory = () => {\r\n  // Store memories as an array of objects\r\n  const [memories, setMemories] = useState([\r\n    {\r\n      id: 'm1',\r\n      type: 'location',\r\n      content: 'The adventure began at the entrance to a mysterious cave system known for its glowing crystals.',\r\n      timestamp: new Date(Date.now() - 1200000).toISOString(),\r\n      importance: 'high'\r\n    },\r\n    {\r\n      id: 'm2',\r\n      type: 'npc',\r\n      content: 'Met an old hermit named Gareth who warned about strange noises coming from deep within the cave.',\r\n      timestamp: new Date(Date.now() - 900000).toISOString(),\r\n      importance: 'medium'\r\n    },\r\n    {\r\n      id: 'm3',\r\n      type: 'item',\r\n      content: 'Found a rusty key that might open something important.',\r\n      timestamp: new Date(Date.now() - 600000).toISOString(),\r\n      importance: 'low'\r\n    },\r\n    {\r\n      id: 'm4',\r\n      type: 'quest',\r\n      content: 'Accepted a quest to discover the source of the glowing crystals and their magical properties.',\r\n      timestamp: new Date(Date.now() - 300000).toISOString(),\r\n      importance: 'high'\r\n    }\r\n  ]);\r\n\r\n  // Add a new memory\r\n  const addToMemory = useCallback((memoryData) => {\r\n    const { userMessage, gmResponse, gameStateChanges } = memoryData;\r\n    \r\n    // Create a summary of the interaction\r\n    const content = `Player: \"${userMessage.slice(0, 50)}${userMessage.length > 50 ? '...' : ''}\" - GM: \"${gmResponse.slice(0, 50)}${gmResponse.length > 50 ? '...' : ''}\"`;\r\n    \r\n    // Determine memory importance based on game state changes\r\n    const importance = gameStateChanges ? 'high' : 'medium';\r\n    \r\n    // Create a new memory object\r\n    const newMemory = {\r\n      id: `m${Date.now()}`,\r\n      type: 'conversation',\r\n      content,\r\n      timestamp: new Date().toISOString(),\r\n      importance,\r\n      details: {\r\n        userMessage,\r\n        gmResponse,\r\n        gameStateChanges\r\n      }\r\n    };\r\n    \r\n    // Add the new memory to the state\r\n    setMemories(prevMemories => [newMemory, ...prevMemories]);\r\n    \r\n    return newMemory;\r\n  }, []);\r\n\r\n  // Retrieve relevant memories based on a query\r\n  const retrieveRelevantMemories = useCallback((query) => {\r\n    // This is a very simple relevance algorithm for demo purposes\r\n    // In a real implementation, this would use more sophisticated techniques\r\n    \r\n    // Convert query to lowercase for case-insensitive matching\r\n    const queryLower = query.toLowerCase();\r\n    \r\n    // Filter memories based on content matching and sort by importance\r\n    const relevantMemories = memories\r\n      .filter(memory => memory.content.toLowerCase().includes(queryLower))\r\n      .sort((a, b) => {\r\n        // Sort by importance (high, medium, low)\r\n        const importanceRank = { high: 3, medium: 2, low: 1 };\r\n        const importanceDiff = importanceRank[b.importance] - importanceRank[a.importance];\r\n        \r\n        if (importanceDiff !== 0) return importanceDiff;\r\n        \r\n        // If importance is the same, sort by recency (newest first)\r\n        return new Date(b.timestamp) - new Date(a.timestamp);\r\n      })\r\n      .slice(0, 5); // Limit to 5 most relevant memories\r\n    \r\n    return Promise.resolve(relevantMemories);\r\n  }, [memories]);\r\n\r\n  // Delete a memory\r\n  const deleteMemory = useCallback((memoryId) => {\r\n    setMemories(prevMemories => prevMemories.filter(memory => memory.id !== memoryId));\r\n  }, []);\r\n\r\n  // Update a memory\r\n  const updateMemory = useCallback((memoryId, updates) => {\r\n    setMemories(prevMemories => \r\n      prevMemories.map(memory => \r\n        memory.id === memoryId ? { ...memory, ...updates } : memory\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  return {\r\n    memories,\r\n    addToMemory,\r\n    retrieveRelevantMemories,\r\n    deleteMemory,\r\n    updateMemory\r\n  };\r\n};\r\n\r\nexport default useMemory;","import React from 'react';\r\nimport './ResponseControls.css';\r\n\r\nconst ResponseControls = ({ onRetry, onEdit, isGenerating }) => {\r\n  return (\r\n    <div className=\"response-controls\">\r\n      <button \r\n        className=\"control-button retry\" \r\n        onClick={onRetry}\r\n        disabled={isGenerating}\r\n        title=\"Regenerate the last response\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M1 4v6h6\"></path>\r\n          <path d=\"M3.51 15a9 9 0 1 0 2.13-9.36L1 10\"></path>\r\n        </svg>\r\n        <span>Retry</span>\r\n      </button>\r\n      \r\n      <button \r\n        className=\"control-button edit\" \r\n        onClick={onEdit}\r\n        disabled={isGenerating}\r\n        title=\"Edit the last response\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>\r\n        </svg>\r\n        <span>Edit</span>\r\n      </button>\r\n      \r\n      <div className=\"control-info\">\r\n        <span className=\"info-text\">These controls affect the Game Master's last response.</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResponseControls;","import React from 'react';\r\nimport { marked } from 'marked';\r\nimport './NarrativeDisplay.css';\r\n\r\n// Configure marked for security\r\nconst renderer = new marked.Renderer();\r\nmarked.setOptions({\r\n  renderer: renderer,\r\n  gfm: true,\r\n  breaks: true,\r\n  sanitize: false, // We'll use DOMPurify instead for better control\r\n  smartLists: true,\r\n  smartypants: true,\r\n  xhtml: false\r\n});\r\n\r\n// Custom handling for dice notation and game terminology\r\nconst processDiceNotation = (text) => {\r\n  // Highlight dice rolls: e.g., 2d6, 1d20+5\r\n  return text.replace(/\\b(\\d+d\\d+(?:[+-]\\d+)?)\\b/g, '<span class=\"dice-notation\">$1</span>');\r\n};\r\n\r\nconst processGameTerms = (text) => {\r\n  // Highlight game mechanics and stats\r\n  return text\r\n    .replace(/\\b(HP|AC|STR|DEX|CON|INT|WIS|CHA)\\b/g, '<span class=\"game-term\">$1</span>')\r\n    .replace(/\\b(attack roll|saving throw|ability check)\\b/gi, '<span class=\"game-mechanic\">$1</span>');\r\n};\r\n\r\nconst NarrativeDisplay = ({ content }) => {\r\n  // Process the content before passing to marked\r\n  let processedContent = content;\r\n  \r\n  // Process dice notation and game terms in regular text (not inside code blocks)\r\n  const codeBlocks = {};\r\n  let codeBlockCounter = 0;\r\n  \r\n  // Temporarily replace code blocks with placeholders to protect them from further processing\r\n  processedContent = processedContent.replace(/```([\\s\\S]*?)```/g, (match) => {\r\n    const placeholder = `CODE_BLOCK_${codeBlockCounter}`;\r\n    codeBlocks[placeholder] = match;\r\n    codeBlockCounter++;\r\n    return placeholder;\r\n  });\r\n  \r\n  // Apply our custom processors\r\n  processedContent = processDiceNotation(processedContent);\r\n  processedContent = processGameTerms(processedContent);\r\n  \r\n  // Put code blocks back\r\n  Object.keys(codeBlocks).forEach(placeholder => {\r\n    processedContent = processedContent.replace(placeholder, codeBlocks[placeholder]);\r\n  });\r\n  \r\n  // Convert to HTML using marked\r\n  const htmlContent = marked(processedContent);\r\n  \r\n  return (\r\n    <div \r\n      className=\"narrative-display\"\r\n      dangerouslySetInnerHTML={{ __html: htmlContent }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NarrativeDisplay;","import React, { useState } from 'react';\r\nimport './DiceRoller.css';\r\n\r\n// Dice types available in D&D\r\nconst DICE_TYPES = [4, 6, 8, 10, 12, 20, 100];\r\n\r\nconst DiceRoller = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [rolls, setRolls] = useState([]);\r\n  const [customDice, setCustomDice] = useState('');\r\n  const [customQuantity, setCustomQuantity] = useState(1);\r\n\r\n  // Roll a die of the given number of sides\r\n  const rollDie = (sides, quantity = 1) => {\r\n    const newRolls = [];\r\n    let total = 0;\r\n    \r\n    for (let i = 0; i < quantity; i++) {\r\n      const value = Math.floor(Math.random() * sides) + 1;\r\n      newRolls.push(value);\r\n      total += value;\r\n    }\r\n    \r\n    // Add the roll to the history\r\n    setRolls(prev => [{\r\n      id: Date.now(),\r\n      dice: `${quantity}d${sides}`,\r\n      values: newRolls,\r\n      total: total\r\n    }, ...prev.slice(0, 9)]); // Keep only the last 10 rolls\r\n  };\r\n\r\n  // Handle the custom dice roll\r\n  const handleCustomRoll = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Parse the dice notation (e.g., \"2d6+3\")\r\n    const diceRegex = /^(\\d+)?d(\\d+)([+-]\\d+)?$/i;\r\n    const match = customDice.match(diceRegex);\r\n    \r\n    if (match) {\r\n      const quantity = match[1] ? parseInt(match[1]) : 1;\r\n      const sides = parseInt(match[2]);\r\n      const modifier = match[3] ? parseInt(match[3]) : 0;\r\n      \r\n      const newRolls = [];\r\n      let total = modifier;\r\n      \r\n      for (let i = 0; i < quantity; i++) {\r\n        const value = Math.floor(Math.random() * sides) + 1;\r\n        newRolls.push(value);\r\n        total += value;\r\n      }\r\n      \r\n      // Add the roll to the history\r\n      setRolls(prev => [{\r\n        id: Date.now(),\r\n        dice: customDice,\r\n        values: newRolls,\r\n        total: total,\r\n        modifier: modifier\r\n      }, ...prev.slice(0, 9)]); // Keep only the last 10 rolls\r\n      \r\n      // Reset the custom dice input\r\n      setCustomDice('');\r\n    }\r\n  };\r\n\r\n  // Toggle the dice roller panel\r\n  const toggleDiceRoller = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={`dice-roller ${isOpen ? 'open' : ''}`}>\r\n      <button \r\n        className=\"dice-roller-toggle\" \r\n        onClick={toggleDiceRoller}\r\n        title=\"Dice Roller\"\r\n      >\r\n        <span role=\"img\" aria-label=\"Dice\">🎲</span>\r\n      </button>\r\n      \r\n      {isOpen && (\r\n        <div className=\"dice-roller-panel\">\r\n          <h3>Dice Roller</h3>\r\n          \r\n          <div className=\"common-dice\">\r\n            {DICE_TYPES.map(sides => (\r\n              <button \r\n                key={sides} \r\n                className=\"dice-button\"\r\n                onClick={() => rollDie(sides, customQuantity)}\r\n              >\r\n                {`d${sides}`}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"dice-quantity\">\r\n            <label htmlFor=\"dice-quantity\">Quantity:</label>\r\n            <input\r\n              id=\"dice-quantity\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"100\"\r\n              value={customQuantity}\r\n              onChange={e => setCustomQuantity(parseInt(e.target.value) || 1)}\r\n            />\r\n          </div>\r\n          \r\n          <form className=\"custom-dice-form\" onSubmit={handleCustomRoll}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"e.g., 2d6+3\"\r\n              value={customDice}\r\n              onChange={e => setCustomDice(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Roll</button>\r\n          </form>\r\n          \r\n          <div className=\"dice-history\">\r\n            <h4>Roll History</h4>\r\n            {rolls.length > 0 ? (\r\n              <ul>\r\n                {rolls.map(roll => (\r\n                  <li key={roll.id}>\r\n                    <strong>{roll.dice}:</strong> {roll.values.join(', ')}\r\n                    {roll.modifier ? ` ${roll.modifier > 0 ? '+' : ''}${roll.modifier}` : ''}\r\n                    {' = '}<span className=\"roll-total\">{roll.total}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p className=\"no-rolls\">No dice rolled yet.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiceRoller;","import React from 'react';\r\nimport './Loading.css';\r\n\r\nconst Loading = ({ text = 'Loading...' }) => {\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <div className=\"loading-dots\">\r\n        <div className=\"dot dot1\"></div>\r\n        <div className=\"dot dot2\"></div>\r\n        <div className=\"dot dot3\"></div>\r\n      </div>\r\n      <div className=\"loading-text\">{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;","import React, { useState, useRef, useEffect } from 'react';\r\nimport './GameMasterPanel.css';\r\nimport useLLM from '../../hooks/useLLM';\r\nimport useGameState from '../../hooks/useGameState';\r\nimport useMemory from '../../hooks/useMemory';\r\nimport ResponseControls from './ResponseControls';\r\nimport NarrativeDisplay from './NarrativeDisplay';\r\nimport DiceRoller from '../common/DiceRoller';\r\nimport Loading from '../common/Loading';\r\n\r\nconst GameMasterPanel = () => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [conversation, setConversation] = useState([]);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [isEditingResponse, setIsEditingResponse] = useState(false);\r\n  const [editedResponse, setEditedResponse] = useState('');\r\n  \r\n  const conversationEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  \r\n  const { generateResponse, isConnected } = useLLM();\r\n  const { gameState, updateGameState } = useGameState();\r\n  const { addToMemory, retrieveRelevantMemories } = useMemory();\r\n  \r\n  // Auto-scroll to the bottom of the conversation\r\n  useEffect(() => {\r\n    if (conversationEndRef.current) {\r\n      conversationEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [conversation]);\r\n\r\n  // Focus the input field when the component loads\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n  \r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n  \r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n  \r\n  const handleSendMessage = async () => {\r\n    if (!userInput.trim() || isGenerating) return;\r\n    \r\n    // Add user message to conversation\r\n    const userMessage = {\r\n      role: 'user',\r\n      content: userInput,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setConversation(prev => [...prev, userMessage]);\r\n    setUserInput('');\r\n    setIsGenerating(true);\r\n    \r\n    try {\r\n      // Retrieve relevant memories for context\r\n      const relevantMemories = await retrieveRelevantMemories(userInput);\r\n      \r\n      // Generate AI response\r\n      const response = await generateResponse(userInput, {\r\n        gameState,\r\n        memories: relevantMemories,\r\n        conversation: conversation\r\n      });\r\n      \r\n      // Add GM response to conversation\r\n      const gmResponse = {\r\n        role: 'assistant',\r\n        content: response.text,\r\n        timestamp: new Date().toISOString(),\r\n        gameStateChanges: response.gameStateChanges || null\r\n      };\r\n      \r\n      setConversation(prev => [...prev, gmResponse]);\r\n      \r\n      // Update game state if needed\r\n      if (response.gameStateChanges) {\r\n        updateGameState(response.gameStateChanges);\r\n      }\r\n      \r\n      // Add to memory system\r\n      addToMemory({\r\n        userMessage: userInput,\r\n        gmResponse: response.text,\r\n        gameStateChanges: response.gameStateChanges\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error generating response:', error);\r\n      \r\n      // Add error message to conversation\r\n      setConversation(prev => [...prev, {\r\n        role: 'system',\r\n        content: 'Sorry, there was an error communicating with the Game Master. Please try again.',\r\n        timestamp: new Date().toISOString(),\r\n        isError: true\r\n      }]);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n  \r\n  const handleRetry = async () => {\r\n    if (conversation.length < 1) return;\r\n    \r\n    // Remove the last GM response\r\n    const newConversation = [...conversation];\r\n    const lastUserMessageIndex = newConversation.map(m => m.role).lastIndexOf('user');\r\n    \r\n    if (lastUserMessageIndex !== -1) {\r\n      const lastUserMessage = newConversation[lastUserMessageIndex];\r\n      setConversation(newConversation.slice(0, lastUserMessageIndex + 1));\r\n      setIsGenerating(true);\r\n      \r\n      try {\r\n        // Retrieve relevant memories for context\r\n        const relevantMemories = await retrieveRelevantMemories(lastUserMessage.content);\r\n        \r\n        // Generate new AI response\r\n        const response = await generateResponse(lastUserMessage.content, {\r\n          gameState,\r\n          memories: relevantMemories,\r\n          conversation: newConversation.slice(0, lastUserMessageIndex)\r\n        });\r\n        \r\n        // Add GM response to conversation\r\n        const gmResponse = {\r\n          role: 'assistant',\r\n          content: response.text,\r\n          timestamp: new Date().toISOString(),\r\n          gameStateChanges: response.gameStateChanges || null\r\n        };\r\n        \r\n        setConversation(prev => [...prev, gmResponse]);\r\n        \r\n        // Update game state if needed\r\n        if (response.gameStateChanges) {\r\n          updateGameState(response.gameStateChanges);\r\n        }\r\n        \r\n        // Add to memory system\r\n        addToMemory({\r\n          userMessage: lastUserMessage.content,\r\n          gmResponse: response.text,\r\n          gameStateChanges: response.gameStateChanges\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('Error regenerating response:', error);\r\n        \r\n        // Add error message to conversation\r\n        setConversation(prev => [...prev, {\r\n          role: 'system',\r\n          content: 'Sorry, there was an error communicating with the Game Master. Please try again.',\r\n          timestamp: new Date().toISOString(),\r\n          isError: true\r\n        }]);\r\n      } finally {\r\n        setIsGenerating(false);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const handleEdit = () => {\r\n    if (conversation.length < 1) return;\r\n    \r\n    const lastGMResponse = [...conversation].reverse().find(m => m.role === 'assistant');\r\n    \r\n    if (lastGMResponse) {\r\n      setEditedResponse(lastGMResponse.content);\r\n      setIsEditingResponse(true);\r\n    }\r\n  };\r\n  \r\n  const handleSaveEdit = () => {\r\n    if (!editedResponse.trim()) return;\r\n    \r\n    const newConversation = [...conversation];\r\n    const lastGMResponseIndex = newConversation.map(m => m.role).lastIndexOf('assistant');\r\n    \r\n    if (lastGMResponseIndex !== -1) {\r\n      newConversation[lastGMResponseIndex] = {\r\n        ...newConversation[lastGMResponseIndex],\r\n        content: editedResponse,\r\n        isEdited: true\r\n      };\r\n      \r\n      setConversation(newConversation);\r\n      setIsEditingResponse(false);\r\n      setEditedResponse('');\r\n    }\r\n  };\r\n  \r\n  const handleCancelEdit = () => {\r\n    setIsEditingResponse(false);\r\n    setEditedResponse('');\r\n  };\r\n  \r\n  return (\r\n    <div className=\"game-master-panel\">\r\n      <div className=\"game-master-header\">\r\n        <h2>Game Master</h2>\r\n        <DiceRoller />\r\n      </div>\r\n      \r\n      <div className=\"conversation-container\">\r\n        {conversation.length === 0 ? (\r\n          <div className=\"empty-conversation\">\r\n            <p>Your adventure awaits! Talk to the Game Master to begin...</p>\r\n          </div>\r\n        ) : (\r\n          conversation.map((message, index) => (\r\n            <div \r\n              key={index} \r\n              className={`message ${message.role} ${message.isError ? 'error' : ''}`}\r\n            >\r\n              <div className=\"message-avatar\">\r\n                {message.role === 'user' ? '🧙‍♂️' : message.role === 'assistant' ? '📜' : '⚠️'}\r\n              </div>\r\n              <div className=\"message-content\">\r\n                <NarrativeDisplay content={message.content} />\r\n                {message.isEdited && <span className=\"edited-tag\">(edited)</span>}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        \r\n        {isGenerating && (\r\n          <div className=\"message assistant generating\">\r\n            <div className=\"message-avatar\">📜</div>\r\n            <div className=\"message-content\">\r\n              <Loading text=\"The Game Master is thinking...\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={conversationEndRef} />\r\n      </div>\r\n      \r\n      {isEditingResponse ? (\r\n        <div className=\"response-edit-container\">\r\n          <textarea\r\n            value={editedResponse}\r\n            onChange={(e) => setEditedResponse(e.target.value)}\r\n            placeholder=\"Edit the Game Master's response...\"\r\n            rows={4}\r\n          />\r\n          <div className=\"edit-buttons\">\r\n            <button onClick={handleCancelEdit}>Cancel</button>\r\n            <button onClick={handleSaveEdit}>Save</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <ResponseControls \r\n            onRetry={handleRetry} \r\n            onEdit={handleEdit} \r\n            isGenerating={isGenerating} \r\n          />\r\n          \r\n          <div className=\"input-container\">\r\n            <textarea\r\n              ref={inputRef}\r\n              value={userInput}\r\n              onChange={handleInputChange}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder=\"Tell the Game Master what you want to do...\"\r\n              rows={2}\r\n              disabled={isGenerating || !isConnected}\r\n            />\r\n            <button \r\n              onClick={handleSendMessage} \r\n              disabled={!userInput.trim() || isGenerating || !isConnected}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n          \r\n          {!isConnected && (\r\n            <div className=\"connection-warning\">\r\n              Not connected to LLM service. Check your connection settings.\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameMasterPanel;","import React, { createContext, useContext, useState } from 'react';\r\n\r\n// Create the context\r\nconst CharacterContext = createContext();\r\n\r\n// Sample character data\r\nconst sampleCharacter = {\r\n  name: \"Tharion Nightblade\",\r\n  race: \"Half-Elf\",\r\n  class: \"Rogue\",\r\n  level: 3,\r\n  alignment: \"Chaotic Good\",\r\n  background: \"Criminal\",\r\n  \r\n  abilityScores: {\r\n    strength: 12,\r\n    dexterity: 16,\r\n    constitution: 14,\r\n    intelligence: 14,\r\n    wisdom: 10,\r\n    charisma: 14\r\n  },\r\n  \r\n  combatStats: {\r\n    hitPoints: {\r\n      max: 24,\r\n      current: 24,\r\n      temporary: 0\r\n    },\r\n    armorClass: 15,\r\n    initiative: 3,\r\n    speed: 30,\r\n    hitDice: {\r\n      total: 3,\r\n      used: 0,\r\n      type: \"d8\"\r\n    }\r\n  },\r\n  \r\n  skills: {\r\n    acrobatics: { proficient: true, expertise: false },\r\n    animalHandling: { proficient: false, expertise: false },\r\n    arcana: { proficient: false, expertise: false },\r\n    athletics: { proficient: false, expertise: false },\r\n    deception: { proficient: true, expertise: true },\r\n    history: { proficient: false, expertise: false },\r\n    insight: { proficient: false, expertise: false },\r\n    intimidation: { proficient: false, expertise: false },\r\n    investigation: { proficient: true, expertise: false },\r\n    medicine: { proficient: false, expertise: false },\r\n    nature: { proficient: false, expertise: false },\r\n    perception: { proficient: true, expertise: false },\r\n    performance: { proficient: false, expertise: false },\r\n    persuasion: { proficient: true, expertise: false },\r\n    religion: { proficient: false, expertise: false },\r\n    sleightOfHand: { proficient: true, expertise: true },\r\n    stealth: { proficient: true, expertise: true },\r\n    survival: { proficient: false, expertise: false }\r\n  },\r\n  \r\n  inventory: [\r\n    { id: \"item-1\", name: \"Shortsword\", type: \"Weapon\", quantity: 1, weight: 2, description: \"Finesse, light\" },\r\n    { id: \"item-2\", name: \"Dagger\", type: \"Weapon\", quantity: 2, weight: 1, description: \"Finesse, light, thrown (range 20/60)\" },\r\n    { id: \"item-3\", name: \"Thieves' Tools\", type: \"Tool\", quantity: 1, weight: 1, description: \"Proficiency allows you to add your proficiency bonus to any ability checks made to disarm traps or open locks.\" },\r\n    { id: \"item-4\", name: \"Potion of Healing\", type: \"Potion\", quantity: 3, weight: 0.5, description: \"Regains 2d4+2 hit points when consumed.\" }\r\n  ],\r\n  \r\n  spells: [],\r\n  \r\n  features: [\r\n    { name: \"Sneak Attack\", description: \"Once per turn, you can deal an extra 2d6 damage to one creature you hit with an attack if you have advantage on the attack roll.\" },\r\n    { name: \"Cunning Action\", description: \"You can use a bonus action to take the Dash, Disengage, or Hide action.\" },\r\n    { name: \"Thieves' Cant\", description: \"You know the secret language of thieves.\" }\r\n  ],\r\n  \r\n  proficiencies: {\r\n    languages: [\"Common\", \"Elvish\", \"Thieves' Cant\"],\r\n    weapons: [\"Simple weapons\", \"Hand crossbows\", \"Longswords\", \"Rapiers\", \"Shortswords\"],\r\n    armor: [\"Light armor\"],\r\n    tools: [\"Thieves' tools\", \"Playing cards\"]\r\n  }\r\n};\r\n\r\n// Provider component\r\nexport const CharacterContextProvider = ({ children }) => {\r\n  const [character, setCharacter] = useState(sampleCharacter);\r\n\r\n  // Update character (can be partial updates)\r\n  const updateCharacter = (updates) => {\r\n    setCharacter(prevCharacter => ({\r\n      ...prevCharacter,\r\n      ...updates\r\n    }));\r\n  };\r\n\r\n  // Update a specific ability score\r\n  const updateAbilityScore = (ability, value) => {\r\n    setCharacter(prevCharacter => ({\r\n      ...prevCharacter,\r\n      abilityScores: {\r\n        ...prevCharacter.abilityScores,\r\n        [ability]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Update hit points\r\n  const updateHitPoints = (current, max, temporary) => {\r\n    setCharacter(prevCharacter => ({\r\n      ...prevCharacter,\r\n      combatStats: {\r\n        ...prevCharacter.combatStats,\r\n        hitPoints: {\r\n          current: current !== undefined ? current : prevCharacter.combatStats.hitPoints.current,\r\n          max: max !== undefined ? max : prevCharacter.combatStats.hitPoints.max,\r\n          temporary: temporary !== undefined ? temporary : prevCharacter.combatStats.hitPoints.temporary\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Add item to inventory\r\n  const addInventoryItem = (item) => {\r\n    // Check if item already exists\r\n    const existingItemIndex = character.inventory.findIndex(i => \r\n      i.name.toLowerCase() === item.name.toLowerCase() && i.type === item.type\r\n    );\r\n\r\n    if (existingItemIndex >= 0) {\r\n      // Update quantity of existing item\r\n      const updatedInventory = [...character.inventory];\r\n      updatedInventory[existingItemIndex] = {\r\n        ...updatedInventory[existingItemIndex],\r\n        quantity: updatedInventory[existingItemIndex].quantity + (item.quantity || 1)\r\n      };\r\n\r\n      setCharacter(prevCharacter => ({\r\n        ...prevCharacter,\r\n        inventory: updatedInventory\r\n      }));\r\n    } else {\r\n      // Add new item\r\n      setCharacter(prevCharacter => ({\r\n        ...prevCharacter,\r\n        inventory: [...prevCharacter.inventory, {\r\n          id: `item-${Date.now()}`,\r\n          ...item\r\n        }]\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Remove item from inventory\r\n  const removeInventoryItem = (itemId, quantity = 1) => {\r\n    const itemIndex = character.inventory.findIndex(item => item.id === itemId);\r\n    \r\n    if (itemIndex >= 0) {\r\n      const item = character.inventory[itemIndex];\r\n      \r\n      if (item.quantity <= quantity) {\r\n        // Remove the item entirely\r\n        setCharacter(prevCharacter => ({\r\n          ...prevCharacter,\r\n          inventory: prevCharacter.inventory.filter(item => item.id !== itemId)\r\n        }));\r\n      } else {\r\n        // Decrease the quantity\r\n        const updatedInventory = [...character.inventory];\r\n        updatedInventory[itemIndex] = {\r\n          ...updatedInventory[itemIndex],\r\n          quantity: updatedInventory[itemIndex].quantity - quantity\r\n        };\r\n        \r\n        setCharacter(prevCharacter => ({\r\n          ...prevCharacter,\r\n          inventory: updatedInventory\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Value to be provided by the context\r\n  const contextValue = {\r\n    character,\r\n    updateCharacter,\r\n    updateAbilityScore,\r\n    updateHitPoints,\r\n    addInventoryItem,\r\n    removeInventoryItem\r\n  };\r\n\r\n  return (\r\n    <CharacterContext.Provider value={contextValue}>\r\n      {children}\r\n    </CharacterContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using this context\r\nexport const useCharacter = () => {\r\n  const context = useContext(CharacterContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useCharacter must be used within a CharacterContextProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default CharacterContext;","import { useContext } from 'react';\r\nimport CharacterContext from '../contexts/CharacterContext';\r\n\r\n// Custom hook for using the character context\r\nconst useCharacter = () => {\r\n  const context = useContext(CharacterContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useCharacter must be used within a CharacterContextProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default useCharacter;","import React from 'react';\r\nimport useCharacter from '../../hooks/useCharacter';\r\nimport './CharacterSheet.css';\r\n\r\nconst CharacterSheet = () => {\r\n  const { character } = useCharacter();\r\n\r\n  return (\r\n    <div className=\"character-sheet\">\r\n      <div className=\"character-header\">\r\n        <h2>Character Sheet</h2>\r\n      </div>\r\n      \r\n      <div className=\"character-content\">\r\n        <div className=\"character-basic-info\">\r\n          <h3>{character.name}</h3>\r\n          <div className=\"character-details\">\r\n            <span>Level {character.level} {character.race} {character.class}</span>\r\n            <span>{character.alignment}</span>\r\n            <span>Background: {character.background}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"character-stats\">\r\n          <h3>Ability Scores</h3>\r\n          <div className=\"ability-scores\">\r\n            {Object.entries(character.abilityScores).map(([ability, score]) => (\r\n              <div key={ability} className=\"ability-score\">\r\n                <div className=\"ability-label\">{ability.charAt(0).toUpperCase() + ability.slice(1)}</div>\r\n                <div className=\"ability-value\">{score}</div>\r\n                <div className=\"ability-modifier\">{Math.floor((score - 10) / 2)}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"character-combat\">\r\n          <h3>Combat Stats</h3>\r\n          <div className=\"combat-stats\">\r\n            <div className=\"combat-stat\">\r\n              <div className=\"stat-label\">Hit Points</div>\r\n              <div className=\"stat-value\">\r\n                {character.combatStats.hitPoints.current} / {character.combatStats.hitPoints.max}\r\n              </div>\r\n            </div>\r\n            <div className=\"combat-stat\">\r\n              <div className=\"stat-label\">Armor Class</div>\r\n              <div className=\"stat-value\">{character.combatStats.armorClass}</div>\r\n            </div>\r\n            <div className=\"combat-stat\">\r\n              <div className=\"stat-label\">Initiative</div>\r\n              <div className=\"stat-value\">+{character.combatStats.initiative}</div>\r\n            </div>\r\n            <div className=\"combat-stat\">\r\n              <div className=\"stat-label\">Speed</div>\r\n              <div className=\"stat-value\">{character.combatStats.speed} ft</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"character-features\">\r\n          <h3>Features & Traits</h3>\r\n          <ul className=\"features-list\">\r\n            {character.features.map((feature, index) => (\r\n              <li key={index} className=\"feature-item\">\r\n                <h4>{feature.name}</h4>\r\n                <p>{feature.description}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        \r\n        <div className=\"character-inventory\">\r\n          <h3>Inventory</h3>\r\n          <table className=\"inventory-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Item</th>\r\n                <th>Qty</th>\r\n                <th>Weight</th>\r\n                <th>Description</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {character.inventory.map(item => (\r\n                <tr key={item.id}>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.weight * item.quantity} lb</td>\r\n                  <td>{item.description}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterSheet;","import React, { useState } from 'react';\r\nimport useMemory from '../../hooks/useMemory';\r\nimport './MemoryPanel.css';\r\n\r\nconst MemoryPanel = () => {\r\n  const { memories, deleteMemory, updateMemory } = useMemory();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  // Filter memories based on search term and type filter\r\n  const filteredMemories = memories.filter(memory => {\r\n    const matchesSearch = memory.content.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesFilter = filter === 'all' || memory.type === filter;\r\n    return matchesSearch && matchesFilter;\r\n  });\r\n\r\n  // Format timestamp to a readable date/time\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  // Get appropriate icon for memory type\r\n  const getMemoryIcon = (type) => {\r\n    switch (type) {\r\n      case 'location':\r\n        return '🗺️';\r\n      case 'npc':\r\n        return '👤';\r\n      case 'item':\r\n        return '🔮';\r\n      case 'quest':\r\n        return '📜';\r\n      case 'conversation':\r\n        return '💬';\r\n      default:\r\n        return '📝';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-panel\">\r\n      <div className=\"memory-header\">\r\n        <h2>Adventure Memory</h2>\r\n        <p>Your adventure journal maintains important information for continuity.</p>\r\n      </div>\r\n      \r\n      <div className=\"memory-controls\">\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search memories...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"memory-filters\">\r\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n            <option value=\"all\">All Types</option>\r\n            <option value=\"location\">Locations</option>\r\n            <option value=\"npc\">NPCs</option>\r\n            <option value=\"item\">Items</option>\r\n            <option value=\"quest\">Quests</option>\r\n            <option value=\"conversation\">Conversations</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"memories-list\">\r\n        {filteredMemories.length > 0 ? (\r\n          filteredMemories.map(memory => (\r\n            <div \r\n              key={memory.id} \r\n              className={`memory-item importance-${memory.importance}`}\r\n            >\r\n              <div className=\"memory-icon\">\r\n                {getMemoryIcon(memory.type)}\r\n              </div>\r\n              <div className=\"memory-content\">\r\n                <div className=\"memory-text\">{memory.content}</div>\r\n                <div className=\"memory-meta\">\r\n                  <span className=\"memory-type\">{memory.type}</span>\r\n                  <span className=\"memory-time\">{formatTimestamp(memory.timestamp)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"memory-actions\">\r\n                <button \r\n                  className=\"edit-memory\"\r\n                  title=\"Edit memory\"\r\n                  onClick={() => {\r\n                    const newContent = prompt('Edit memory:', memory.content);\r\n                    if (newContent && newContent !== memory.content) {\r\n                      updateMemory(memory.id, { content: newContent });\r\n                    }\r\n                  }}\r\n                >\r\n                  ✏️\r\n                </button>\r\n                <button \r\n                  className=\"delete-memory\"\r\n                  title=\"Delete memory\"\r\n                  onClick={() => {\r\n                    if (window.confirm('Are you sure you want to delete this memory?')) {\r\n                      deleteMemory(memory.id);\r\n                    }\r\n                  }}\r\n                >\r\n                  🗑️\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"no-memories\">\r\n            <p>No memories match your search.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoryPanel;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport MainLayout from './components/layout/MainLayout';\r\nimport GameMasterPanel from './components/gameMaster/GameMasterPanel';\r\nimport CharacterSheet from './components/character/CharacterSheet';\r\nimport MemoryPanel from './components/memory/MemoryPanel';\r\nimport { GameContextProvider } from './contexts/GameContext';\r\nimport { CharacterContextProvider } from './contexts/CharacterContext';\r\nimport { LLMContextProvider } from './contexts/LLMContext';\r\n\r\nfunction App() {\r\n  const [activeTab, setActiveTab] = useState('game-master');\r\n  \r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'game-master':\r\n        return <GameMasterPanel />;\r\n      case 'character':\r\n        return <CharacterSheet />;\r\n      case 'memory':\r\n        return <MemoryPanel />;\r\n      default:\r\n        return <GameMasterPanel />;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"app\">\r\n      <LLMContextProvider>\r\n        <GameContextProvider>\r\n          <CharacterContextProvider>\r\n            <MainLayout\r\n              activeTab={activeTab}\r\n              onTabChange={setActiveTab}\r\n            >\r\n              {renderContent()}\r\n            </MainLayout>\r\n          </CharacterContextProvider>\r\n        </GameContextProvider>\r\n      </LLMContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\nserviceWorkerRegistration.register();"],"sourceRoot":""}